{"version":3,"sources":["EmotionTable.js","App.js","reportWebVitals.js","index.js"],"names":["EmotionTable","just_emotions","this","props","emotions","emotion","document","className","Object","entries","map","mapentry","React","Component","App","state","innercomp","rows","cols","id","mode","sentimentOutput","sentiment","renderTextArea","getElementById","value","setState","renderTextBox","sendForSentimentAnalysis","url","axios","get","then","response","output","data","returned_document","string_response","score","label","style","color","fontSize","sendForEmotionAnalysis","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.74516faf.chunk.js","sourcesContent":["import React from 'react';\nimport './bootstrap.min.css';\n\nclass EmotionTable extends React.Component {\n    render() {\n        // console.log('Hello from the EmotionTable.js');\n        // console.log(this.props.emotions);\n        // console.log(this.props.emotions.emotion.document);\n        // console.log(this.props.emotions.emotion.document.emotion);\n        let just_emotions = this.props.emotions.emotion.document.emotion;\n        return (  \n            <div>\n                {/* You can remove this line and the line below.\n                {JSON.stringify(this.props.emotions)} */}\n                <table className=\"table table-bordered\">\n                    <tbody>\n                        {Object.entries(just_emotions).map(function(mapentry) {\n                            return (\n                                <tr>\n                                    <td>{mapentry[0]}</td>\n                                    <td>{mapentry[1]}</td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default EmotionTable;\n","import './bootstrap.min.css';\nimport './App.css';\nimport EmotionTable from './EmotionTable.js';\nimport React from 'react';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  state = {innercomp:<textarea rows=\"4\" cols=\"50\" id=\"textinput\"/>,\n            mode: \"text\",\n          sentimentOutput:[],\n          sentiment:true\n        }\n  \n  renderTextArea = ()=>{\n    document.getElementById(\"textinput\").value = \"\";\n    if(this.state.mode === \"url\") {\n      this.setState({innercomp:<textarea rows=\"4\" cols=\"50\" id=\"textinput\"/>,\n      mode: \"text\",\n      sentimentOutput:[],\n      sentiment:true\n    })\n    } \n  }\n\n  renderTextBox = ()=>{\n    document.getElementById(\"textinput\").value = \"\";\n    if(this.state.mode === \"text\") {\n      this.setState({innercomp:<textarea rows=\"1\" cols=\"50\" id=\"textinput\"/>,\n      mode: \"url\",\n      sentimentOutput:[],\n      sentiment:true\n    })\n    }\n  }\n\n  sendForSentimentAnalysis = () => {\n    this.setState({sentiment:true});\n    let ret = \"\";\n    let url = \".\";\n\n    if(this.state.mode === \"url\") {\n      url = url+\"/url/sentiment?url=\"+document.getElementById(\"textinput\").value;\n    } else {\n      url = url+\"/text/sentiment?text=\"+document.getElementById(\"textinput\").value;\n    }\n    ret = axios.get(url);\n    ret.then((response)=>{\n\n      //Include code here to check the sentiment and fomrat the data accordingly\n\n    //   this.setState({sentimentOutput:response.data});\n      let output = response.data;\n      let returned_document = output.sentiment.document;\n      let string_response = \"Sentiment score: \" + returned_document.score + \", sentiment label: \" + returned_document.label;\n\n    //   console.log('In app.js, output: ');\n    //   console.log(output);\n    //   console.log('returned_document: ');\n    //   console.log(returned_document);\n    //   console.log('returned_document.score: ');\n    //   console.log(returned_document.score);\n    //   console.log(string_response);\n\n      if(returned_document.label === \"positive\") {\n        output = <div style={{color:\"green\",fontSize:20}}>{string_response}</div>\n      } else if (returned_document.label === \"negative\"){\n        output = <div style={{color:\"red\",fontSize:20}}>{string_response}</div>\n      } else {\n        output = <div style={{color:\"orange\",fontSize:20}}>{string_response}</div>\n      }\n      this.setState({sentimentOutput:output});\n    });\n  }\n\n  sendForEmotionAnalysis = () => {\n    this.setState({sentiment:false});\n    let ret = \"\";\n    let url = \".\";\n    if(this.state.mode === \"url\") {\n      url = url+\"/url/emotion?url=\"+document.getElementById(\"textinput\").value;\n    } else {\n      url = url+\"/text/emotion/?text=\"+document.getElementById(\"textinput\").value;\n    }\n    ret = axios.get(url);\n\n    ret.then((response)=>{\n      this.setState({sentimentOutput:<EmotionTable emotions={response.data}/>});\n  });\n  }\n  \n\n  render() {\n    return (  \n      <div className=\"App\">\n      <button className=\"btn btn-info\" onClick={this.renderTextArea}>Text</button>\n        <button className=\"btn btn-dark\"  onClick={this.renderTextBox}>URL</button>\n        <br/><br/>\n        {this.state.innercomp}\n        <br/>\n        <button className=\"btn-primary\" onClick={this.sendForSentimentAnalysis}>Analyze Sentiment</button>\n        <button className=\"btn-primary\" onClick={this.sendForEmotionAnalysis}>Analyze Emotion</button>\n        <br/>\n            {this.state.sentimentOutput}\n      </div>\n    );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}